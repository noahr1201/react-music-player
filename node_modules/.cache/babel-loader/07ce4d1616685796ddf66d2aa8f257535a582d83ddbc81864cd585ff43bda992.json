{"ast":null,"code":"var _jsxFileName = \"/Users/noah/Desktop/Interface/React/Eind/eind/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // Assuming you have a CSS file for styling\n\n// Simplified data structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  albums: [{\n    id: 1,\n    title: \"Album 1\",\n    artist: \"Artist 1\",\n    songs: [{\n      id: 1,\n      title: \"Song 1\",\n      artist: \"Artist 1\",\n      mp3: \"song1.mp3\"\n    }, {\n      id: 2,\n      title: \"Song 2\",\n      artist: \"Artist 1\",\n      mp3: \"song2.mp3\"\n    }]\n  }\n  // Add more albums...\n  ],\n  artists: [{\n    id: 1,\n    name: \"Artist 1\",\n    songs: [{\n      id: 1,\n      title: \"Song 1\",\n      album: \"Album 1\",\n      mp3: \"song1.mp3\"\n    }, {\n      id: 2,\n      title: \"Song 2\",\n      album: \"Album 1\",\n      mp3: \"song2.mp3\"\n    }]\n  }\n  // Add more artists...\n  ]\n};\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false); // Track if a song is currently playing\n\n  const filteredSongs = data.artists.flatMap(artist => artist.songs).filter(song => song.title.toLowerCase().includes(searchQuery.toLowerCase()) || song.artist.toLowerCase().includes(searchQuery.toLowerCase()));\n  const handleSearchInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const playSong = song => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Muziek Streaming App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Zoeken naar nummers, albums of artiesten\",\n        value: searchQuery,\n        onChange: handleSearchInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nummers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-list\",\n            children: filteredSongs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `song ${currentSong && currentSong.title === song.title && isPlaying ? 'active' : ''}`,\n              onClick: () => playSong(song),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: song.image,\n                alt: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [song.title, \" - \", song.artist]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, song.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Artiesten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artist-list\",\n            children: data.artists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: artist.image,\n                alt: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => playSong(artist.songs[0]),\n                children: artist.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, artist.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Albums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"album-list\",\n            children: data.albums.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"album\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: album.image,\n                alt: album.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => playSong(album.songs[0]),\n                children: album.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)]\n            }, album.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [currentSong.title, \" - \", currentSong.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        autoPlay: isPlaying // Auto play if a song is selected and isPlaying is true\n        ,\n        onPause: () => setIsPlaying(false) // Update isPlaying state when paused\n        ,\n        onEnded: () => setIsPlaying(false) // Update isPlaying state when the song ends\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: currentSong.mp3,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), \"Your browser does not support the audio element.\"]\n      }, currentSong.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"esu2F1cN4p+PIpvOJ4mP7m+6tFs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","data","albums","id","title","artist","songs","mp3","artists","name","album","App","_s","searchQuery","setSearchQuery","currentSong","setCurrentSong","isPlaying","setIsPlaying","filteredSongs","flatMap","filter","song","toLowerCase","includes","handleSearchInputChange","event","target","value","playSong","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","onClick","src","image","alt","controls","autoPlay","onPause","onEnded","_c","$RefreshReg$"],"sources":["/Users/noah/Desktop/Interface/React/Eind/eind/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\"; // Assuming you have a CSS file for styling\n\n// Simplified data structure\nconst data = {\n  albums: [\n    {\n      id: 1,\n      title: \"Album 1\",\n      artist: \"Artist 1\",\n      songs: [\n        { id: 1, title: \"Song 1\", artist: \"Artist 1\", mp3: \"song1.mp3\" },\n        { id: 2, title: \"Song 2\", artist: \"Artist 1\", mp3: \"song2.mp3\" }\n      ]\n    },\n    // Add more albums...\n  ],\n  artists: [\n    {\n      id: 1,\n      name: \"Artist 1\",\n      songs: [\n        { id: 1, title: \"Song 1\", album: \"Album 1\", mp3: \"song1.mp3\" },\n        { id: 2, title: \"Song 2\", album: \"Album 1\", mp3: \"song2.mp3\" }\n      ]\n    },\n    // Add more artists...\n  ]\n};\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false); // Track if a song is currently playing\n\n  const filteredSongs = data.artists\n    .flatMap(artist => artist.songs)\n    .filter(\n      song =>\n        song.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        song.artist.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n  const handleSearchInputChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const playSong = (song) => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Muziek Streaming App</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Zoeken naar nummers, albums of artiesten\"\n          value={searchQuery}\n          onChange={handleSearchInputChange}\n        />\n      </header>\n      <main>\n        <div className=\"mobile-container\">\n          <section>\n            <h2>Nummers</h2>\n            <div className=\"song-list\">\n              {filteredSongs.map((song) => (\n                <div\n                  className={`song ${currentSong && currentSong.title === song.title && isPlaying ? 'active' : ''}`}\n                  key={song.id}\n                  onClick={() => playSong(song)}\n                >\n                  <img src={song.image} alt={song.title} />\n                  <p>\n                    {song.title} - {song.artist}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </section>\n          <section>\n            <h2>Artiesten</h2>\n            <div className=\"artist-list\">\n              {data.artists.map((artist) => (\n                <div className=\"artist\" key={artist.id}>\n                  <img src={artist.image} alt={artist.name} />\n                  <p onClick={() => playSong(artist.songs[0])}>{artist.name}</p>\n                </div>\n              ))}\n            </div>\n          </section>\n          <section>\n            <h2>Albums</h2>\n            <div className=\"album-list\">\n              {data.albums.map((album) => (\n                <div className=\"album\" key={album.id}>\n                  <img src={album.image} alt={album.title} />\n                  <p onClick={() => playSong(album.songs[0])}>{album.title}</p>\n                </div>\n              ))}\n            </div>\n          </section>\n        </div>\n      </main>\n      <footer>{/* Add footer content here */}</footer>\n      {currentSong && (\n        <div className=\"music-player\">\n          <h2>Now Playing</h2>\n          <p>\n            {currentSong.title} - {currentSong.artist}\n          </p>\n          <audio\n            controls\n            autoPlay={isPlaying} // Auto play if a song is selected and isPlaying is true\n            onPause={() => setIsPlaying(false)} // Update isPlaying state when paused\n            onEnded={() => setIsPlaying(false)} // Update isPlaying state when the song ends\n            key={currentSong.title} // Ensure audio element is recreated when song changes\n          >\n            <source src={currentSong.mp3} type=\"audio/mpeg\" />\n            Your browser does not support the audio element.\n          </audio>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}