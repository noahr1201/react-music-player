{"ast":null,"code":"var _jsxFileName = \"/Users/noah/Desktop/Interface/React/Eind/eind/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false); // Track if a song is currently playing\n\n  const filteredSongs = songData.filter(song => song.title.toLowerCase().includes(searchQuery.toLowerCase()) || song.artist.toLowerCase().includes(searchQuery.toLowerCase()));\n  const handleSearchInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const playSong = song => {\n    // If the clicked song is the same as the current song, toggle play/pause\n    if (currentSong && currentSong.title === song.title) {\n      setIsPlaying(prevState => !prevState);\n    } else {\n      setCurrentSong(song);\n      setIsPlaying(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Muziek Streaming App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Zoeken naar nummers, albums of artiesten\",\n        value: searchQuery,\n        onChange: handleSearchInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-container\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nummers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-list\",\n            children: filteredSongs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `song ${currentSong && currentSong.title === song.title && isPlaying ? 'active' : ''}`,\n              onClick: () => playSong(song),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: song.image,\n                alt: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [song.title, \" - \", song.artist]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)]\n            }, song.title, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [currentSong.title, \" - \", currentSong.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        autoPlay: isPlaying // Auto play if a song is selected and isPlaying is true\n        ,\n        onPause: () => setIsPlaying(false) // Update isPlaying state when paused\n        ,\n        onEnded: () => setIsPlaying(false) // Update isPlaying state when the song ends\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: currentSong.mp3,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"esu2F1cN4p+PIpvOJ4mP7m+6tFs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","searchQuery","setSearchQuery","useState","currentSong","setCurrentSong","isPlaying","setIsPlaying","filteredSongs","songData","filter","song","title","toLowerCase","includes","artist","handleSearchInputChange","event","target","value","playSong","prevState","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","onClick","src","image","alt","controls","autoPlay","onPause","onEnded","mp3","_c","$RefreshReg$"],"sources":["/Users/noah/Desktop/Interface/React/Eind/eind/src/App.js"],"sourcesContent":["function App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false); // Track if a song is currently playing\n\n  const filteredSongs = songData.filter(\n    (song) =>\n      song.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      song.artist.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const handleSearchInputChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const playSong = (song) => {\n    // If the clicked song is the same as the current song, toggle play/pause\n    if (currentSong && currentSong.title === song.title) {\n      setIsPlaying((prevState) => !prevState);\n    } else {\n      setCurrentSong(song);\n      setIsPlaying(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Muziek Streaming App</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Zoeken naar nummers, albums of artiesten\"\n          value={searchQuery}\n          onChange={handleSearchInputChange}\n        />\n      </header>\n      <main>\n        <div className=\"mobile-container\">\n          <section>\n            <h2>Nummers</h2>\n            <div className=\"song-list\">\n              {filteredSongs.map((song) => (\n                <div\n                  className={`song ${currentSong && currentSong.title === song.title && isPlaying ? 'active' : ''}`}\n                  key={song.title}\n                  onClick={() => playSong(song)}\n                >\n                  <img src={song.image} alt={song.title} />\n                  <p>\n                    {song.title} - {song.artist}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </section>\n          {/* Other sections for artists and albums */}\n        </div>\n      </main>\n      <footer>{/* Add footer content here */}</footer>\n      {currentSong && (\n        <div className=\"music-player\">\n          <h2>Now Playing</h2>\n          <p>\n            {currentSong.title} - {currentSong.artist}\n          </p>\n          <audio\n            controls\n            autoPlay={isPlaying} // Auto play if a song is selected and isPlaying is true\n            onPause={() => setIsPlaying(false)} // Update isPlaying state when paused\n            onEnded={() => setIsPlaying(false)} // Update isPlaying state when the song ends\n          >\n            <source src={currentSong.mp3} type=\"audio/mpeg\" />\n            Your browser does not support the audio element.\n          </audio>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}